# # In Emacs org-mode: before exporting, comment this out START
# ;; Local Variables:
# ;; ispell-check-comments: exclusive
# ;; ispell-local-dictionary: "english"
# ;; End:
# # In Emacs org-mode: before exporting, comment this out FINISH

# Org-mode Export LaTeX Customization Notes:
# - Interpret 'bla_bla' as LaTeX Math bla subscript bla: #+OPTIONS ^:t. Interpret literally bla_bla: ^:nil.
# - org export: turn off heading -> section numbering: #+OPTIONS: num:nil
# - org export: change list numbering to alphabetical, sources:
#   - https://orgmode.org/manual/Plain-lists-in-LaTeX-export.html
#   - https://tex.stackexchange.com/a/129960
#   - must be inserted before each list:
#     #+ATTR_LATEX: :environment enumerate
#     #+ATTR_LATEX: :options [label=\alph*)]
# - allow org to recognize alphabetical lists a)...: M-x customize-variable org-list-allow-alphabetical


# -----------------------
# General Export Options:
#+OPTIONS: ^:nil ':nil *:t -:t ::t <:t H:3 \n:nil arch:headline
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: f:t inline:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t todo:t |:t

#+OPTIONS: author:Johannes Wasmer
#+OPTIONS: email:johannes.wasmer@gmail.com
# #+AUTHOR: Johannes Wasmer
# #+EMAIL: johannes.wasmer@gmail.com

# for org for web (eg gitlab, github): num:nil, toc:nil. using custom Table of Contents below.
# for tex/pdf export, temporarily: num:t, toc:t. replace * Table of Contents -> * COMMENT Table of Contents.
#+OPTIONS: num:nil
# t or nil: disable export latex section numbering for org headings
#+OPTIONS: toc:nil
# t or nil: no table of contents (doesn't work if num:nil)

#+TITLE: about-myself-notes
#+SUBTITLE:
#+DATE: \today
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 28.2 (Org mode 9.6.5)

# ---------------------
# LaTeX Export Options:
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage[top=0.5in,bottom=0.5in,left=1in,right=1in,includeheadfoot]{geometry} % wider page; load BEFORE fancyhdr
#+LATEX_HEADER: \usepackage[inline]{enumitem} % for customization of itemize, enumerate envs
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{bm}
#+LATEX_HEADER: \usepackage{mathtools}
#+LATEX_HEADER: % override 'too deeply nested error'
#+LATEX_HEADER: % (may occur in deeply nested org files)
#+LATEX_HEADER: % reference: https://stackoverflow.com/a/13120787
#+LATEX_HEADER: \usepackage{enumitem}
#+LATEX_HEADER: \setlistdepth{9}
#+LATEX_HEADER: \setlist[itemize,1]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,2]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,3]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,4]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,5]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,6]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,7]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,8]{label=$\bullet$}
#+LATEX_HEADER: \setlist[itemize,9]{label=$\bullet$}
#+LATEX_HEADER: \renewlist{itemize}{itemize}{9}
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+LATEX_COMPILER: pdflatex

# auto-id: get export-safe org-mode headline IDs
# References:
# - web: https://writequit.org/articles/emacs-org-mode-generate-ids.html
# - local:
#   - Emacs Config Notes > get export-safe org-mode headline IDs
#   - emacs dotfile > =JW 220419 org-mode headlines CUSTOM_ID=
#+OPTIONS: auto-id:t

# --------------------
# Agenda Config.
# Notes:
# - tags:
#   - :TOC: automatic table of contents generation via https://github.com/snosov1/toc-org.
#     (Note: this is for org/markdown etc. For latex/html export, prefer #+OPTIONS: toc:t.)
#+TODO: DOING(1) NEXT(2) TODO(3) WAITING(4) POSTPONED(5) SHELVED(6) | DONE(0) ABANDONED(9)
#+TAGS: URGENT(0) PRIO1(1) PRIO2(2) PRIO3(3) ADMIN(a) CODING(c) WRITING(w) TOC(t)
#+ARCHIVE: about-myself-notes_archive.org::

* [[file:~/src/about-myself-nb/README.md][Up]]
* Description
* Table of Contents                                                     :TOC:
- [[#up][Up]]
- [[#description][Description]]
- [[#dependencies-documentation][Dependencies documentation]]
- [[#format-syncing][Format syncing]]
- [[#update-2023-05-15][Update 2023-05-15]]
  - [[#reverse-engineer-presentation-exports][Reverse engineer presentation exports]]
  - [[#research-on-hzdrheliport][Research on HZDR/HELIPORT]]

* Dependencies documentation
RISE for classical Jupyer notebook (nb version).

- https://jupyter-notebook.readthedocs.io
- https://github.com/damianavila/RISE
- https://rise.readthedocs.io

RISE for JupyterLab (lab version).

- https://jupyterlab.readthedocs.io
- https://github.com/jupyterlab-contrib/rise

Misc.

- https://nbconvert.readthedocs.io
- https://jupyter-contrib-nbextensions.readthedocs.io

As of <2023-05-15 Mon>, the nb version still seems more feature-complete. Eg,
some shortcuts don't work in the lab version.
* Format syncing
Call

#+begin_src shell
micromamba activate rise-presentation
jupyter nbconvert --to markdown about_myself.ipynb; jupyter nbconvert --to slides about_myself.ipynb; jupyter nbconvert --to slides about_myself.ipynb --post serve
#+end_src

The PDF export command here is manual. It opens the HTML slides in the
browser. Print with the print options described [[https://rise.readthedocs.io/en/stable/exportpdf.html#using-nbconvert][in the docs]].

Paste the content of the created Markdown file to README.md, below the README.md
comment header.

* Update 2023-05-15
** Reverse engineer presentation exports
In this repo, I have the same presentation in different file formats.

#+begin_src shell :results output
ls ../ | grep -e "about_myself" -e "README"
#+end_src

#+RESULTS:
: README.md
: about_myself.ipynb
: about_myself.md
: about_myself.slides.html
: about_myself.slides.pdf

Questions:

- Q1. Which one is the source?
- Q2. Which ones are exported from source, and what are the export commands?
- Q3. Which ones are NOT exported from source, and why? Did I manually sync them?

Answers.

- Q1. The ipynb.
- Q2. The md, html, pdf.
  - md, html: [[https://nbconvert.readthedocs.io/en/latest/usage.html#supported-output-formats][nbconvert docs > supported output formats]]
  - pdf: [[https://rise.readthedocs.io/en/stable/exportpdf.html#using-nbconvert][RISE docs > PDF Export > Using nbconvert]]

  Commands:

  #+begin_src shell
  cd ~/src/about-myself
  micromamba activate rise-presentation
  # other sync
  jupyter nbconvert --to markdown about_myself.ipynb
  jupyter nbconvert --to slides about_myself.ipynb
  # PDF sync, via browser print
  jupyter nbconvert --to slides about_myself.ipynb --post serve
  #+end_src

  Or, as one-liner.

  #+begin_src shell
  jupyter nbconvert --to markdown about_myself.ipynb; jupyter nbconvert --to slides about_myself.ipynb; jupyter nbconvert --to slides about_myself.ipynb --post serve
  #+end_src

  The PDF export command here is manual. It opens the HTML slides in the
  browser. Print with the print options described [[https://rise.readthedocs.io/en/stable/exportpdf.html#using-nbconvert][in the docs]].

  I tried the nbconvert ~--to webpdf~ option. It did not work well for me, the
  images were broken.

- Q3. The README.md has an additional header: a comment section ~Images @ github
  remote~. it is an image links list to the =img/= images. So, I guess the sync
  from source is 1) nbconvert ipynb > md, 2) copy-paste md > README, below the
  header.

  #+begin_src shell :results output
  diff ../README.md ../about_myself.md
  #+end_src

  #+RESULTS:
  #+begin_example
  1,19d0
  < <!-- Images @ github remote -->
  < <!-- ![profile picture](https://github.com/Irratzo/about-myself/blob/master/img/picture_64pt.jpg) -->
  < <!-- ![logos](https://github.com/Irratzo/about-myself/blob/master/img/logos.png) -->
  < <!-- ![scdb-db](https://github.com/Irratzo/about-myself/blob/master/img/2017_bsc-thesis_gui_db.png) -->
  < <!-- ![scdb-diff](https://github.com/Irratzo/about-myself/blob/master/img/2017_bsc-thesis_gui_diff.png) -->
  < <!-- ![aixvipmap](https://github.com/Irratzo/about-myself/blob/master/img/2018_hiwi_aixvipmap.jpg) -->
  < <!-- ![treemap-plugin](https://github.com/Irratzo/about-myself/blob/master/img/2018_gsp_lateSender_allInOne.png) -->
  < <!-- ![banddos-preprocessor](https://github.com/Irratzo/about-myself/blob/master/img/2019_sisclab_preprocessor.png) -->
  < <!-- ![banddos-gui](https://github.com/Irratzo/about-myself/blob/master/img/2019_sisclab_web-frontend.png) -->
  <
  < <!-- Links: -->
  < <!-- - 2014-17 BSc in Scientific Programming at FH Aachen / [Access e.V.](http://www.access.rwth-aachen.de/) -->
  < <!-- - 2017-21 MSc Simulation Science at RWTH Aachen / [FZ Jülich](https://www.fz-juelich.de) -->
  < <!-- [Jülich Supercomputing Centre](https://www.fz-juelich.de/ias/jsc/EN) -->
  < <!-- [Cube performance report explorer](https://www.scalasca.org/software/cube-4.x) -->
  < <!-- [Institute of Quantum Theory of Materials](https://www.fz-juelich.de/pgi/pgi-1/EN) -->
  < <!-- [OPH e.V.](https://www.oph.rwth-aachen.de) -->
  <
  <
  127c108
  < <!-- Yes, if I pass all exams in summer, I will have one exam to finish in February / March, High Performance Computing, 6 credit points.  -->
  ---
  > <!-- Yes, if I pass all exams in summer, I will have one exam to finish in February / March, High Performance Computing, 6 credit points. -->
  #+end_example
** Research on HZDR/HELIPORT
HZDR.

- [[https://de.wikipedia.org/wiki/Helmholtz-Zentrum_Dresden-Rossendorf#Forschungsanlagen][wiki > HZDR > facilities]]

HELIPORT.

- [[https://heliport.hzdr.de/][heliport homepage]]
  - they use [[https://www.commonwl.org/][CWL]] as workflow language, with a [[https://github.com/rabix/cwl-svg#preview][cool visualizer]]
- [[https://codebase.helmholtz.cloud/heliport/][heliport source code repositories]]
  - [[https://codebase.helmholtz.cloud/heliport/heliport#system-architecture][heliport system architecture]]
  - they use
- [[https://doi.org/10.1145/3456287.3465477][heliport publication 2020]]
  - table 1:
    - aha, AiiDA also uses CWL v1.0? I didn't know.
    - here, heliport is the ONLY scientific workflow tool featuruing metadata
      export
    - [[https://www.unicore.eu/][UNICORE]] is also listed here. indead, it now has [[https://unicore-docs.readthedocs.io/en/latest/user-docs/rest-api/workflow-description/index.html][worklow support]].
- [[https://mattermost.hzdr.de/heliport][heliport chat]]

Knodel group.

- [[https://www.google.com/search?q=oliver+knodel+hzdr][gsearch > olider knodel hzdr]]
  - [[https://www.hzdr.de/db/Cms?pOid=60532&pNid=0][hzdr working group "data management and HPC"]]
    - previous projects align well with my career path so far in RSE/RDM
